# Let's Encrypt ClusterIssuers for cert-manager with DNS-01 Challenge
# Uses Cloudflare DNS for domain validation (supports wildcard certificates)
#
# These will be configured by cluster-config.sh with values from environment variables:
# - LETSENCRYPT_EMAIL: Email for ACME registration (required by protocol)
# - CLOUDFLARE_API_TOKEN: Same token used by External-DNS
---
# Staging issuer - Use this for testing (higher rate limits, untrusted certificates)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # Let's Encrypt staging server
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    # Will be replaced by cluster-config.sh from LETSENCRYPT_EMAIL env var
    email: ${LETSENCRYPT_EMAIL}
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging-key
    # DNS-01 challenge solver using Cloudflare
    solvers:
    - dns01:
        cloudflare:
          # API token for Cloudflare DNS (same as External-DNS uses)
          # This secret will be created by cluster-config.sh from CLOUDFLARE_API_TOKEN
          apiTokenSecretRef:
            name: cloudflare-api-token-cert-manager
            key: api-token
---
# Production issuer - Use this for real certificates
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # Let's Encrypt production server
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration (critical security notices only)
    # Will be replaced by cluster-config.sh from LETSENCRYPT_EMAIL env var
    email: ${LETSENCRYPT_EMAIL}
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod-key
    # DNS-01 challenge solver using Cloudflare
    solvers:
    - dns01:
        cloudflare:
          # API token for Cloudflare DNS (same as External-DNS uses)
          # This secret will be created by cluster-config.sh from CLOUDFLARE_API_TOKEN
          apiTokenSecretRef:
            name: cloudflare-api-token-cert-manager
            key: api-token
---
# Note: DNS-01 Challenge Benefits:
# - Supports wildcard certificates (*.domain.com)
# - Works behind firewalls and in private clusters
# - No need for public HTTP access during validation
# - Shares the same Cloudflare API token with External-DNS
#
# Required Cloudflare API Token Permissions:
# - Zone:DNS:Edit (for the DNS zones you want certificates for)
# - Zone:Zone:Read (to list zones)
#
# Rate Limits (Let's Encrypt):
# - Production: 50 certificates per domain per week
# - Staging: 30,000 certificates per domain per week (untrusted certs)
# - Always test with staging first to avoid hitting production limits!