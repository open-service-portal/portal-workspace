metadata:
  namespace: default
  annotations:
    backstage.io/managed-by-location: url:https://github.com/open-service-portal/service-nodejs-template/tree/main/template.yaml
    backstage.io/managed-by-origin-location: url:https://github.com/open-service-portal/service-nodejs-template/blob/main/template.yaml
    backstage.io/view-url: https://github.com/open-service-portal/service-nodejs-template/tree/main/template.yaml
    backstage.io/edit-url: https://github.com/open-service-portal/service-nodejs-template/edit/main/template.yaml
    backstage.io/source-location: https://github.com/open-service-portal/service-nodejs-template/tree/main/template.yaml
    backstage.io/discovered-at: '2025-09-10T08:56:30.052Z'
  name: service-nodejs-template
  title: Node.js Service
  description: Create a new Node.js microservice with Express.js and basic project structure
  tags:
    - source:github-import
    - nodejs
    - javascript
    - express
    - recommended
    - source:github-discovered
    - auto-discovered
    - org:open-service-portal
    - official
  uid: d899016a-cda2-49ff-b9a8-b97e7f961fb5
  etag: da8208836233858a06e4dbbf731049a5b8e1e546
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
spec:
  owner: group:open-service-portal
  type: service
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - open-service-portal
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
relations:
  - type: ownedBy
    targetRef: group:default/open-service-portal
