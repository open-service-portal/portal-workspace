metadata:
  namespace: default
  annotations:
    backstage.io/managed-by-location: 'cluster: openportal'
    backstage.io/managed-by-origin-location: 'cluster: openportal'
    terasky.backstage.io/crossplane-version: v2
    terasky.backstage.io/crossplane-scope: Namespaced
    backstage.io/description: Create and manage DNS records in Cloudflare with automatic zone configuration
    backstage.io/source-location: url:https://github.com/open-service-portal/template-cloudflare-dnsrecord
    backstage.io/title: Cloudflare DNS Record
    crossplane.io/version: v2.0
    description: Manage real DNS records in Cloudflare
    github.com/project-slug: open-service-portal/template-cloudflare-dnsrecord
    openportal.dev/tags: dns,cloudflare
    terasky.backstage.io/add-to-catalog: 'true'
    terasky.backstage.io/auto-apply: 'true'
    terasky.backstage.io/component-type: crossplane-template
    terasky.backstage.io/composition-strategy: direct
    terasky.backstage.io/default-composition: cloudflarednsrecord
    terasky.backstage.io/lifecycle: production
    terasky.backstage.io/owner: platform-team
    terasky.backstage.io/skip-publish-step: 'true'
    terasky.backstage.io/system: infrastructure-templates
    terasky.backstage.io/tags: dns,cloudflare
    backstage.io/discovered-at: '2025-09-10T08:56:44.167Z'
  name: cloudflarednsrecords.openportal.dev-v1alpha1
  title: CloudflareDNSRecord
  description: A template to create a cloudflarednsrecords.openportal.dev instance
  labels:
    forEntity: system
    source: crossplane
    openportal.dev/version: v2.0.2
    terasky.backstage.io/generate-form: 'true'
  tags:
    - source:kubernetes-ingestor
    - crossplane
    - cluster:openportal
  uid: 9b6a210a-b38e-4045-87a3-691875823467
  etag: 7138c2f11988ee9b09c25cccef2b3fa79761bd48
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
spec:
  type: cloudflarednsrecords.openportal.dev
  parameters:
    - title: Resource Metadata
      required:
        - xrName
        - owner
        - xrNamespace
      properties:
        xrName:
          title: Name
          description: The name of the resource
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
          maxLength: 63
          type: string
        xrNamespace:
          title: Namespace
          description: 'The namespace in which to create the resource (default: demo)'
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
          maxLength: 63
          type: string
          default: demo
        owner:
          title: Owner
          description: The owner of the resource
          type: string
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
      type: object
    - title: Resource Spec
      properties:
        comment:
          description: Optional comment for the DNS record
          maxLength: 100
          type: string
        name:
          description: Subdomain name (e.g., 'api' creates api.yourdomain.com, use '@' for root domain)
          examples:
            - api
            - www
            - staging
            - '@'
          maxLength: 63
          minLength: 1
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(@)?$
          type: string
        priority:
          description: Priority for MX and SRV records
          maximum: 65535
          minimum: 0
          type: integer
        proxied:
          default: false
          description: Whether to use Cloudflare proxy (orange cloud)
          type: boolean
        ttl:
          description: Time to live in seconds (1 = automatic)
          maximum: 86400
          minimum: 1
          type: integer
          ui:placeholder: 1
        type:
          description: DNS record type
          enum:
            - A
            - AAAA
            - CNAME
            - TXT
            - MX
            - NS
            - SRV
          type: string
        value:
          description: 'Target value: IPv4 for A, IPv6 for AAAA, hostname for CNAME, text for TXT'
          examples:
            - 192.168.1.100
            - 2001:db8::1
            - target.example.com
          type: string
        zone:
          description: Cloudflare Zone resource (leave default for openportal.dev domain)
          type: string
          ui:placeholder: openportal-zone
      type: object
    - title: Crossplane Settings
      properties:
        crossplane:
          title: Crossplane Configuration
          type: object
          properties:
            compositionUpdatePolicy:
              title: Composition Update Policy
              enum:
                - Automatic
                - Manual
              type: string
            compositionSelectionStrategy:
              title: Composition Selection Strategy
              description: How the composition should be selected.
              enum:
                - runtime
                - direct-reference
                - label-selector
              default: runtime
              type: string
          dependencies:
            compositionSelectionStrategy:
              oneOf:
                - properties:
                    compositionSelectionStrategy:
                      enum:
                        - runtime
                - properties:
                    compositionSelectionStrategy:
                      enum:
                        - direct-reference
                    compositionRef:
                      title: Composition Reference
                      properties:
                        name:
                          type: string
                          title: Select A Composition By Name
                          enum:
                            - cloudflarednsrecord
                          default: cloudflarednsrecord
                      required:
                        - name
                      type: object
                - properties:
                    compositionSelectionStrategy:
                      enum:
                        - label-selector
                    compositionSelector:
                      title: Composition Selector
                      properties:
                        matchLabels:
                          title: Match Labels
                          additionalProperties:
                            type: string
                          type: object
                      required:
                        - matchLabels
                      type: object
      type: object
    - title: Creation Settings
      properties:
        pushToGit:
          title: Push Manifest to GitOps Repository
          type: boolean
          default: true
      dependencies:
        pushToGit:
          oneOf:
            - properties:
                pushToGit:
                  enum:
                    - false
            - properties:
                pushToGit:
                  enum:
                    - true
                manifestLayout:
                  type: string
                  description: Layout of the manifest
                  default: cluster-scoped
                  ui:help: |-
                    Choose how the manifest should be generated in the repo.
                    * Cluster-scoped - a manifest is created for each selected cluster under the root directory of the clusters name
                    * namespace-scoped - a manifest is created for the resource under the root directory with the namespace name
                    * custom - a manifest is created under the specified base path
                  enum:
                    - cluster-scoped
                    - namespace-scoped
                    - custom
              dependencies:
                manifestLayout:
                  oneOf:
                    - properties:
                        manifestLayout:
                          enum:
                            - cluster-scoped
                        clusters:
                          title: Target Clusters
                          description: The target clusters to apply the resource to
                          type: array
                          minItems: 1
                          items:
                            enum:
                              - openportal
                            type: string
                          uniqueItems: true
                          ui:widget: checkboxes
                      required:
                        - clusters
                    - properties:
                        manifestLayout:
                          enum:
                            - custom
                        basePath:
                          type: string
                          description: Base path in GitOps repository to push the manifest to
                      required:
                        - basePath
                    - properties:
                        manifestLayout:
                          enum:
                            - namespace-scoped
  steps:
    - id: generateManifest
      name: Generate Kubernetes Resource Manifest
      action: terasky:claim-template
      input:
        parameters: ${{ parameters }}
        nameParam: xrName
        namespaceParam: xrNamespace
        ownerParam: owner
        excludeParams:
          - crossplane.compositionSelectionStrategy
          - owner
          - pushToGit
          - basePath
          - manifestLayout
          - _editData
          - targetBranch
          - repoUrl
          - clusters
          - xrName
          - xrNamespace
        apiVersion: openportal.dev/v1alpha1
        kind: CloudflareDNSRecord
        clusters: ${{ parameters.clusters if parameters.manifestLayout === 'cluster-scoped' and parameters.pushToGit else ['temp'] }}
        removeEmptyParams: true
    - id: moveNamespacedManifest
      name: Move and Rename Manifest
      if: ${{ parameters.manifestLayout === 'namespace-scoped' }}
      action: fs:rename
      input:
        files:
          - from: ${{ steps.generateManifest.output.filePaths[0] }}
            to: ./${{ parameters.xrNamespace }}/${{ steps.generateManifest.input.kind }}/${{ steps.generateManifest.output.filePaths[0].split('/').pop() }}
    - id: moveCustomManifest
      name: Move and Rename Manifest
      if: ${{ parameters.manifestLayout === 'custom' }}
      action: fs:rename
      input:
        files:
          - from: ${{ steps.generateManifest.output.filePaths[0] }}
            to: ./${{ parameters.basePath }}/${{ parameters.xrName }}.yaml
    - id: create-pull-request
      name: create-pull-request
      action: publish:github:pull-request
      if: ${{ parameters.pushToGit }}
      input:
        repoUrl: github.com?owner=open-service-portal&repo=catalog-orders
        branchName: create-${{ parameters.xrName }}-resource
        title: Create CloudflareDNSRecord Resource ${{ parameters.xrName }}
        description: Create CloudflareDNSRecord Resource ${{ parameters.xrName }}
        targetBranchName: main
  output:
    links:
      - title: Download YAML Manifest
        url: data:application/yaml;charset=utf-8,${{ steps.generateManifest.output.manifest }}
      - title: Open Pull Request
        if: ${{ parameters.pushToGit }}
        url: ${{ steps["create-pull-request"].output.remoteUrl }}
relations: []
